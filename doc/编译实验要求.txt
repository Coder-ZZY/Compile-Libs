《编译》实验要求

1.  设计方法
    选择适合本课程实验设计的软件设计方法，根据选择的不同软件设计方法，指定相应的开发语言，在开发的各个阶段创建相应的分析与设计模型。
1.1.结构化设计方法
    1.1.1 分析模型：包括系统流程图、数据流图（DFD）、实体联系图（ER图）、数据字典；或其它需要的模型，如状态转换图等。
    1) 系统流程图：描述数据在系统各部件（程序、文档、数据库、人工）之间的流动情况；
    2) 数据流图：描述数据从输入到输出的过程中所经过的处理（变换），数据流图应该分层；
    4) 数据字典：描述数据流图中的数据。
    3) ER图：描述数据（实体）、数据之间关系（联系）、约束（关系的基数）；在本设计中ER图只用于数据字典的数据关系可视化（数据无需给出属性）。

    1.1.2 设计模型：包括模块结构图、主要数据结构、函数接口、主要模块流程图等。
    1) 模块结构图：模块与模块之间的关系；
    2) 主要数据结构：给出并说明主要数据结构的定义。
    3) 函数接口：描述所有函数的功能、参数和返回值；
    4) 主要模块流程图：用流程图或伪代码描述；
1.2.面向对象设计方法
    1.2.1 分析模型：包括对象模型（领域模型）、用例模型（用例图和用例文本）；或其它需要的模型，如活动图、交互图等。
    1) 对象模型（领域模型）：描述问题领域中的“类与对象”以及它们之间的关系，表示系统的静态数据结构；
    2) 用例模型：描述行为者（如用户）感受到的、系统的一个完整的功能，亦即系统完成的一系列动作，动作的结果被特定的行为者察觉到；
    3) 活动图：描述总体业务流程，及各个特定功能的业务流程。
    4) 交互图：描述各个特定功能的所有参与对象之间的详细交互过程。
    1.2.2 设计模型：包括对象模型（类图）、主要交互图、主要算法流程图；或其它需要的模型，如模块结构图等。
    1) 对象模型（类图）：描述类与类之间的关系；
    2) 主要交互图：描述主要功能的所有参与对象之间的详细交互过程。
    3) 主要算法流程图：用流程图或伪代码描述；

2.  语言与环境
2.1.程序设计语言
    语言：C/C++；
    语言标准(-std)：ISO C++11
2.2.编译器：g++
2.3.注意事项
    1）可以使用STL
    2）不允许使用其它第三方函数库

3.  编程风格
    选择一种编程风格（标识符命名、注释、文本视觉格式等约定），描述这种风格，并使用这种风格完成所有实验。


4.  实验报告内容
    封面使用学院的实验报告模板。
4.1.问题描述；
    LL、LR语法分析器要给出原理描述。
4.2.分析模型；
    不能只给出各种模型的图形表示，还要给出模型的各个部分（处理、实体、关系）的说明；
    至少应该包含数据流图、实体关系图或对象模型；
4.3.设计模型；
    不能只给出各种模型的图形表示，还要给出模型的各个部分（处理、实体、关系）的说明；
    至少应该包含数据结构或类图；
    至少应该包含模块结构图或时序图；
4.4.系统实现：
    描述主要算法的实现（流程图、伪代码或其它算法描述形式）。
    不能粘贴源代码。
4.5.测试数据及测试结果；
4.6.实验总结：
    实验时间安排（准备时间、上机时间、调试时间等），遇到的问题及解决的方法和过程等，程序的评价，收获、体会和建议等。


5.  资料提交
5.1.实验报告（.doc、docx 或 .pdf）； 
5.2.程序源代码（.c 或 .cpp）；
5.3.文件命名格式
    实验报告文件名格式：“学号-序号.doc”，如“201924101234-1.cpp”。
    源代码文件名格式  ：“学号-序号.cpp”，如“201924101234-1.cpp”。编码格式要求ANSI。
    其中序号指的是第几个实验。


6.  其它要求
6.1 全局变量：非必要，不使用。如果确实需要，必须给出理由。
6.2 函数接口：非必要，必带参。函数的参数表尽量不为空，也不宜太长（超过5个参数）。class的成员函数除外。
6.3 程序结构：非必要，必分解。程序结构不能少于3层，第一层的分解不能多于10个（即主函数内的函数调用个数）。
6.4 鼓励自己实现基础数据结构（树、栈、集合、稀疏矩阵、队列等容器类）。

   	
7.  特别说明
    综合实验（6、9）需要提交实验报告和源代码，其它实验（1-5、7、8）只需提交源代码。
